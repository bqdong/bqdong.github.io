#!/bin/env -S deno run --allow-run="deno,git"

// format code
const fmtCmd = new Deno.Command("deno", {
  args: ["task", "fmt"],
});
const fmtResult = await fmtCmd.output();
if (fmtResult.code !== 0) {
  console.error("Format code err");
  Deno.exit(1);
}

// add formatted content again
const gitAddCmd = new Deno.Command("git", {
  args: ["add", "."],
});
const addCmd = await gitAddCmd.output();
if (addCmd.code !== 0) {
  console.error("Git add error");
  const decoder = new TextDecoder();
  console.error(decoder.decode(addCmd.stderr));
  Deno.exit(1);
}

// lint code
const lintCmd = new Deno.Command("deno", {
  args: ["task", "lint"],
});
const lintResult = await lintCmd.output();
if (lintResult.code !== 0) {
  console.error("Lint not pass!\n");
  const decoder = new TextDecoder();
  console.error(decoder.decode(lintResult.stderr));
  Deno.exit(1);
}

// test
const testCmd = new Deno.Command("deno", {
  args: ["task", "test"],
});
const testResult = await testCmd.output();
if (testResult.code !== 0) {
  console.error("Test not pass!\n");
  const decoder = new TextDecoder();
  console.error(decoder.decode(testResult.stderr));
  Deno.exit(1);
}
