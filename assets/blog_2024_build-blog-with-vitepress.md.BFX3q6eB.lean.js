import{_ as i,c as a,m as o,o as l}from"./chunks/framework.DWQkl8gS.js";const u=JSON.parse('{"title":"Hello world","description":"","frontmatter":{"title":"Hello world"},"headers":[],"relativePath":"blog/2024/build-blog-with-vitepress.md","filePath":"blog/2024/build-blog-with-vitepress.md"}'),r={name:"blog/2024/build-blog-with-vitepress.md"};function t(s,e,d,n,c,h){return l(),a("div",null,e[0]||(e[0]=[o('<h1 id="hello-world" tabindex="-1">Hello, world <a class="header-anchor" href="#hello-world" aria-label="Permalink to &quot;Hello, world&quot;">​</a></h1><p>第一篇博客。正文如下：</p><h2 id="why-build-this" tabindex="-1">Why build this ？ <a class="header-anchor" href="#why-build-this" aria-label="Permalink to &quot;Why build this ？&quot;">​</a></h2><p>When you are writing, you are thinking. As a programmer, writing is a good way to think. Practice, practice, practice.</p><h2 id="技术栈" tabindex="-1">技术栈 <a class="header-anchor" href="#技术栈" aria-label="Permalink to &quot;技术栈&quot;">​</a></h2><ul><li><a href="https://vitepress.dev/" target="_blank" rel="noreferrer">VitePress</a></li><li><a href="https://github.com/denoland/deno/" target="_blank" rel="noreferrer">Deno</a></li></ul><h2 id="why-vitepress" tabindex="-1">Why vitepress <a class="header-anchor" href="#why-vitepress" aria-label="Permalink to &quot;Why vitepress&quot;">​</a></h2><ul><li>vitepress 是一个静态网站生成器，基于 vue 3 和 Vite。 主题可定制，生成 的页面可以托管在在 GitHub Pages。</li><li>想要学习 vue3 和 ssg</li></ul><h2 id="why-deno" tabindex="-1">Why deno <a class="header-anchor" href="#why-deno" aria-label="Permalink to &quot;Why deno&quot;">​</a></h2><ul><li>相比于 node，deno 提供了开箱即用的工具</li><li>提供一个学习 deno 的机会</li></ul><h2 id="挑战" tabindex="-1">挑战 <a class="header-anchor" href="#挑战" aria-label="Permalink to &quot;挑战&quot;">​</a></h2><h3 id="自定义-vitepress-主题" tabindex="-1">自定义 vitepress 主题 <a class="header-anchor" href="#自定义-vitepress-主题" aria-label="Permalink to &quot;自定义 vitepress 主题&quot;">​</a></h3><p>为了学习相关的技术，本博客自定义 vitepress 主题，这就不可避免地要接触 vitepress 提供 的 API，甚至需要读源码。</p><h4 id="vitepress-源码阅读" tabindex="-1">vitepress 源码阅读 <a class="header-anchor" href="#vitepress-源码阅读" aria-label="Permalink to &quot;vitepress 源码阅读&quot;">​</a></h4><p>vitepress 是一个基于 node 的 js cli工具，提供了<code>dev</code>、<code>build</code>、<code>serve</code>等命令。</p><ol><li>项目结构</li></ol><p>观察 <code>package.json</code>，配置有 <code>bin</code>。在<a href="https://docs.npmjs.com/cli/v10/configuring-npm/package-json#bin" target="_blank" rel="noreferrer"><code>package.json规范</code></a>中，bin 字段可以指定一个命令行工具，该字段的值可以是一个文件路径，也可以是一个对象，对象中的键值对，键为命令行工具名，值为文件路径。</p><p>再看<code>package.json</code>的scripts，有很多构建命令，<code>build</code>应该是构建命令，其中包含三个子命令。</p><ul><li><code>build:prepare</code>：删除 dist 目录，并执行拷贝 <code>src/shared</code> 目录下到 client 和 node 目录下</li><li><code>build:client</code>: 编译ts，并将vue组件拷贝的指定位置</li><li><code>build:node</code>: 使用 rollup 打包</li></ul><ol start="2"><li><code>vitepress build</code> 命令</li></ol>',20)]))}const b=i(r,[["render",t]]);export{u as __pageData,b as default};
